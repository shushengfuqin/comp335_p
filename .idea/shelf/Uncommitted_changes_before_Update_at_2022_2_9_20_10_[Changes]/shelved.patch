Index: Orders.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by admin on 2022/2/3.\r\n//\r\n\r\n#include \"Orders.h\"\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nvoid Orders::initNode(struct Node *head, string n, bool isValidate, int orderID) {\r\n    head->orderName = n;\r\n    head->isValidate = isValidate;\r\n    head->orderID = orderID;\r\n    head->next = NULL;\r\n\r\n}\r\n\r\nvoid Orders::addNode(struct Node *head, string n, bool isValidate, int orderID) {\r\n    Node *newNode = new Node;\r\n    newNode->orderName = n;\r\n    newNode->isValidate = isValidate;\r\n    newNode->orderID = orderID;\r\n    newNode->next = NULL;\r\n\r\n\r\n    Node *cur = head;\r\n    while (cur) {\r\n        if (cur->next == NULL) {\r\n            cur->next = newNode;\r\n            return;\r\n        }\r\n        cur = cur->next;\r\n    }\r\n}\r\n\r\n\r\nvoid Orders::insertFront(struct Node **head, string n, bool isValidate, int orderID) {\r\n    Node *newNode = new Node;\r\n    newNode->orderName = n;\r\n    newNode->isValidate = isValidate;\r\n    newNode->orderID = orderID;\r\n    newNode->next = *head;\r\n    *head = newNode;\r\n\r\n}\r\n\r\n\r\nstruct Node *Orders::searchNode(struct Node *head, int n) {\r\n    Node *cur = head;\r\n    while (cur) {\r\n        if (cur->orderID == n) return cur;\r\n        cur = cur->next;\r\n    }\r\n    cout << \"Cannot Find Order \" << n << \" in list.\\n\";\r\n}\r\n\r\n\r\nbool Orders::deleteNode(struct Node **head, Node *ptrDel) {\r\n    Node *cur = *head;\r\n    if (ptrDel == *head) {\r\n        *head = cur->next;\r\n        delete ptrDel;\r\n        return true;\r\n    }\r\n\r\n    while (cur) {\r\n        if (cur->next == ptrDel) {\r\n            cur->next = ptrDel->next;\r\n            delete ptrDel;\r\n            return true;\r\n        }\r\n        cur = cur->next;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nvoid Orders::deleteLinkedList(struct Node **node) {\r\n    struct Node *tmpNode;\r\n    while (*node) {\r\n        tmpNode = *node;\r\n        *node = tmpNode->next;\r\n        delete tmpNode;\r\n    }\r\n}\r\n\r\nvoid Orders::display(struct Node *head) {\r\n    Node *list = head;\r\n    while (list) {\r\n        cout << list->orderName << \" \";\r\n    /*    cout << list->isValidate << \" \";*/\r\n        cout << list->orderID << \" \";\r\n        list = list->next;\r\n    }\r\n    cout << endl;\r\n    cout << endl;\r\n}\r\n\r\n\r\n\r\n/*\r\n    void Orders::move(struct Node **head, int index,int targetPlace ) {\r\n        Node *cur = *head;\r\n        Node *n1 = searchNode(*head, index);\r\n        Node *preTarget = findPreTargetNode(*head, targetPlace);\r\n        Node *temp;\r\n\r\n        if (n1 == *head) {\r\n            n1 = n1->next;\r\n            return;\r\n        }\r\n        while (cur) {\r\n            if (cur->next = n1) {\r\n                temp = n1;\r\n                cur->next = n1->next;\r\n                temp->next = preTarget->next->next;\r\n                preTarget->next = temp;\r\n            }\r\n            cur = cur->next;\r\n        }\r\n\r\n    }*/\r\n\r\n\r\n\r\n\r\n// methods that required for the assignment 1\r\n\r\n//remove method allows removing order from the list\r\nbool Orders::remove(struct Node **head, int targetPlace) {\r\n    int index = 0;\r\n    Node *cur = *head;\r\n\r\n\r\n    while (cur) {\r\n\r\n        if (targetPlace == index) {\r\n            return deleteNode(head, cur);\r\n        }\r\n        cur = cur->next;\r\n        index++;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\n//move method can move the order with specific id to the target place\r\nvoid Orders::move(Node **head, int index, int targetPlace) {\r\n    Node *cur = *head;\r\n    Node *n1 = searchNode(*head, index);\r\n\r\n\r\n    if (n1 == *head) {\r\n        *head = cur->next;\r\n\r\n    } else {\r\n        while (cur != n1) {\r\n\r\n            if (cur->next == n1) {\r\n\r\n                cur->next = cur->next->next;\r\n                break;\r\n            }\r\n            cur = cur->next;\r\n        }\r\n\r\n    }\r\n /*   display(*head);*/\r\n    if (targetPlace == 0) {\r\n        n1->next = *head;\r\n        *head = n1;\r\n    } else {\r\n        Node *cur1 = *head;\r\n        for (int i = 0; i < targetPlace - 1; i++) {\r\n            cur1 = cur1->next;\r\n\r\n        }\r\n        if (cur1->next) {\r\n\r\n            Node *temp = cur1->next;\r\n            cur1->next = n1;\r\n            n1->next = temp;\r\n        } else {\r\n            cur1->next = n1;\r\n            n1->next = NULL;\r\n        }\r\n\r\n    }\r\n /*   display(*head);*/\r\n\r\n\r\n}\r\n\r\n//validate if the order can be executed\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Orders.cpp b/Orders.cpp
--- a/Orders.cpp	(revision 8446aff709adcdac73e2bdecfafe550e6a9e4a63)
+++ b/Orders.cpp	(date 1644452901304)
@@ -8,7 +8,13 @@
 using namespace std;
 
 
+void Orders::initOrder(struct Node *head, string n, bool isValidate, int orderID) {
+    head->orderName = n;
+    head->isValidate = isValidate;
+    head->orderID = orderID;
+    head->next = NULL;
 
+}
 
 void Orders::initNode(struct Node *head, string n, bool isValidate, int orderID) {
     head->orderName = n;
@@ -194,8 +200,36 @@
 
 }
 
+/*
 //validate if the order can be executed
+void Orders::validate(struct Node *head){
+
+    //i give this as a random conditions to determine if it is validate
+    if(head->orderName=="Deploy"||head->orderName=="Bomb"||head->orderName=="Advance"||head->orderName=="Blockade"||head->orderName=="Airlift"||head->orderName=="Negotiate"){
+
+        head->isValidate = true;
+        cout <<"This order is valid and ready to be executed"<<endl;
+        return;
+
+    }
+    else head->isValidate = false;
+    cout <<"This order is invalid and cannot be excuted"<<endl;
+}
 
+
+//execute order
+void Orders::execute(struct Node *head) {
+    if(head->isValidate == true){
+        cout <<head->orderName<<"is been executed"<<endl;
+        return;
+    } else{
+        cout<<"This order cannot be executed"<<endl;
+    }
+
+
+}
+
+*/
 
 
 
Index: Orders.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by admin on 2022/2/3.\r\n//\r\n\r\n#ifndef COMP335_P_ORDERS_H\r\n#define COMP335_P_ORDERS_H\r\n\r\n#include <string>\r\nusing namespace std;\r\nclass Orders {\r\npublic:\r\n\r\n\r\n    static void initNode(struct Node *head, string n, bool isValidate, int orderID);\r\n    static void addNode(struct Node *head, string n, bool isValidate, int orderID);\r\n    static void insertFront(struct Node **head, string n,bool isValidate,int orderID);\r\n    static bool deleteNode(struct Node **head, Node *ptrDel);\r\n    static bool remove(struct Node **head, int targetPlace);\r\n    static void deleteLinkedList(struct Node **node);\r\n    static void display(struct Node *head);\r\n    static Node* searchNode(struct Node *head, int n);\r\n    static void move(struct Node **head, int index,int targetPlace );\r\n};\r\n\r\nstruct Node {\r\n    string orderName;\r\n    bool isValidate;\r\n    int orderID;\r\n    Node *next;\r\n};\r\n#endif //COMP335_P_ORDERS_H\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Orders.h b/Orders.h
--- a/Orders.h	(revision 8446aff709adcdac73e2bdecfafe550e6a9e4a63)
+++ b/Orders.h	(date 1644453244781)
@@ -11,6 +11,8 @@
 public:
 
 
+    static void initOrder(struct Bomb *order,)
+
     static void initNode(struct Node *head, string n, bool isValidate, int orderID);
     static void addNode(struct Node *head, string n, bool isValidate, int orderID);
     static void insertFront(struct Node **head, string n,bool isValidate,int orderID);
@@ -20,12 +22,39 @@
     static void display(struct Node *head);
     static Node* searchNode(struct Node *head, int n);
     static void move(struct Node **head, int index,int targetPlace );
+/*    static void validate(struct Node *head);
+    static void execute(struct Node *head);*/
 };
 
 struct Node {
+    Node();
+    ~Node();
     string orderName;
     bool isValidate;
     int orderID;
     Node *next;
 };
+
+struct Bomb{
+    Bomb(bool isValidate,string orderContent,Bomb* next){};
+    ~Bomb(){};
+    bool validate(int i);
+    void executed(string playerState);
+};
+class Blockade{
+
+};
+class Deploy{
+
+};
+class  Advance{
+
+};
+class Airlift{
+
+};
+class Negotiate{
+
+};
+
 #endif //COMP335_P_ORDERS_H
Index: OrdersDriver.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\r\n// Created by admin on 2022/2/6.\r\n//\r\n\r\n#include <iostream>\r\n#include \"Orders.h\"\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n    struct Node *order = new Node;\r\n    struct Node *thisHead = order;\r\n\r\n    //First initiate the first order of the orderlist\r\n    Orders::initNode(order, \"Bomb\", true, 3);\r\n    Orders::display(order);\r\n    //Add 5 more orders into the list following the first order\r\n    Orders::addNode(order, \"Deploy\", true, 5);\r\n    Orders::display(order);\r\n\r\n    Orders::addNode(order, \"Advance\", true, 0);\r\n    Orders::display(order);\r\n\r\n    Orders::addNode(order, \"Blockade\", true, 2);\r\n    Orders::display(order);\r\n\r\n    Orders::addNode(order, \"Airlift\", true, 9);\r\n    Orders::display(order);\r\n\r\n    Orders::addNode(order, \"Negotiate\", true, 6);\r\n    Orders::display(order);\r\n\r\n/*\r\n\r\n    Orders::remove(&order,2);\r\n    Orders::display(order);\r\n*/\r\n\r\n\r\n/*    Node *ptrNode = Orders::searchNode(order, 6);\r\n    Orders::display(ptrNode);*/\r\n\r\n    Orders::move(&thisHead, 2, 2);\r\n    Orders::display(thisHead);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OrdersDriver.cpp b/OrdersDriver.cpp
--- a/OrdersDriver.cpp	(revision 8446aff709adcdac73e2bdecfafe550e6a9e4a63)
+++ b/OrdersDriver.cpp	(date 1644452626986)
@@ -14,6 +14,7 @@
 
     //First initiate the first order of the orderlist
     Orders::initNode(order, "Bomb", true, 3);
+
     Orders::display(order);
     //Add 5 more orders into the list following the first order
     Orders::addNode(order, "Deploy", true, 5);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\r\n    <generated>\r\n      <config projectName=\"comp335_p\" targetName=\"comp335_p\" />\r\n    </generated>\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"14d435eb-22bc-487c-9ad5-73db3aa152ad\" name=\"Changes\" comment=\"update methods    add constructor\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CMakeLists.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CMakeLists.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/OrdersDriver.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/OrdersDriver.cpp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/OrdersList.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Orders.cpp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/OrdersList.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Orders.h\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/cmake-build-debug/build.ninja\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/cmake-build-debug/build.ninja\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2021\" />\r\n    <option name=\"minorVersion\" value=\"3.3\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"24WbYu948P25vv0xynC1F9S4DzD\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"TODO_SCOPE\" value=\"All Places\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\r\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"cmake.loaded.for.project\" value=\"true\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"CPPToolchains\" />\r\n    <property name=\"structure.view.defaults.are.configured\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"comp335_p\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"comp335_p\" TARGET_NAME=\"comp335_p\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"comp335_p\" RUN_TARGET_NAME=\"comp335_p\">\r\n      <method v=\"2\">\r\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"14d435eb-22bc-487c-9ad5-73db3aa152ad\" name=\"Changes\" comment=\"\" />\r\n      <created>1643749344235</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1643749344235</updated>\r\n      <workItem from=\"1643749348950\" duration=\"659000\" />\r\n      <workItem from=\"1643944031119\" duration=\"1071000\" />\r\n      <workItem from=\"1643946563304\" duration=\"15738000\" />\r\n      <workItem from=\"1644091382473\" duration=\"1218000\" />\r\n      <workItem from=\"1644187273278\" duration=\"1945000\" />\r\n      <workItem from=\"1644261107320\" duration=\"12582000\" />\r\n      <workItem from=\"1644356970536\" duration=\"12332000\" />\r\n      <workItem from=\"1644433954485\" duration=\"5721000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Create Orderlist files\">\r\n      <created>1643947020179</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643947020179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"update OrdersList.cpp\">\r\n      <created>1643953277384</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643953277384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"update OrdersList.cpp and OrdersList.h\">\r\n      <created>1644032219068</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644032219068</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update OrdersList.cpp and OrdersList.h  add driver\">\r\n      <created>1644292553632</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644292553632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"add todo\">\r\n      <created>1644292937101</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644292937101</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"update methods    add constructor\">\r\n      <created>1644379500327</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644379500327</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Create Orderlist files\" />\r\n    <MESSAGE value=\"update OrdersList.cpp\" />\r\n    <MESSAGE value=\"update OrdersList.cpp and OrdersList.h\" />\r\n    <MESSAGE value=\"update OrdersList.cpp and OrdersList.h  add driver\" />\r\n    <MESSAGE value=\"add todo\" />\r\n    <MESSAGE value=\"update methods    add constructor\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update methods    add constructor\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8446aff709adcdac73e2bdecfafe550e6a9e4a63)
+++ b/.idea/workspace.xml	(date 1644455447398)
@@ -11,16 +11,11 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="14d435eb-22bc-487c-9ad5-73db3aa152ad" name="Changes" comment="update methods    add constructor">
+    <list default="true" id="14d435eb-22bc-487c-9ad5-73db3aa152ad" name="Changes" comment="renamed classes  update classes">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Orders.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Orders.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Orders.h" beforeDir="false" afterPath="$PROJECT_DIR$/Orders.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/OrdersDriver.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/OrdersDriver.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/OrdersList.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Orders.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/OrdersList.h" beforeDir="false" afterPath="$PROJECT_DIR$/Orders.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/rules.ninja" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/cmake-build-debug/build.ninja" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/build.ninja" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,6 +23,7 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="ClangdSettings">
+    <option name="clangTidyViaClangd" value="false" />
     <option name="formatViaClangd" value="false" />
   </component>
   <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
@@ -94,7 +90,7 @@
       <workItem from="1644187273278" duration="1945000" />
       <workItem from="1644261107320" duration="12582000" />
       <workItem from="1644356970536" duration="12332000" />
-      <workItem from="1644433954485" duration="5721000" />
+      <workItem from="1644433954485" duration="15357000" />
     </task>
     <task id="LOCAL-00001" summary="Create Orderlist files">
       <created>1643947020179</created>
@@ -138,7 +134,21 @@
       <option name="project" value="LOCAL" />
       <updated>1644379500327</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="renamed classes  update classes">
+      <created>1644439944406</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1644439944406</updated>
+    </task>
+    <task id="LOCAL-00008" summary="renamed classes  update classes">
+      <created>1644439959171</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1644439959171</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -162,6 +172,7 @@
     <MESSAGE value="update OrdersList.cpp and OrdersList.h  add driver" />
     <MESSAGE value="add todo" />
     <MESSAGE value="update methods    add constructor" />
-    <option name="LAST_COMMIT_MESSAGE" value="update methods    add constructor" />
+    <MESSAGE value="renamed classes  update classes" />
+    <option name="LAST_COMMIT_MESSAGE" value="renamed classes  update classes" />
   </component>
 </project>
\ No newline at end of file
